#ifndef Config_h
#define Config_h

#define TARPN_LOGO 1
// #define ADC_DEBUG 0
// #define PID_DEBUG 0

// https://xbm.jazzychad.net/

// 7x6
const unsigned char return_glyph [] PROGMEM = {
 0xc0,0xc4,0xc2,0xbf,0x82,0x84};


// 14x12
static const unsigned char radio_glyph [] PROGMEM = {
 0x60,0xc0,0x80,0xc1,0x00,0xc6,0x00,0xd8,0xfe,0xdf,0x01,0xe0,
 0x19,0xef,0x3d,0xe0,0x3d,0xef,0x19,0xe0,0x01,0xe0,0xfe,0xdf};



// 4x4 pi
const unsigned char pi_glyph [] PROGMEM = {
  0xD0,
  0xC0,
  0x90,
  0x90
};

// 8x4 small negative
const unsigned char neg_glyph [] PROGMEM = {
  0x00,
  0xFC,
  0xFC,
  0x00
};


static const unsigned char check_s [] PROGMEM = {
 0xf0,0xf0,0xf8,0xdb,0xdf,0xce,0xcc};

static const unsigned char x[] PROGMEM = {
 0xf3,0xf3,0xde,0xcc,0xde,0xf3,0xf3};

static const unsigned char interrogative [] PROGMEM = {
 0xde,0xf3,0xf3,0xd8,0xcc,0xc0,0xcc,0xcc};

static const unsigned char plug [] PROGMEM = {
 0x20,0xf0,0xe0,0xf1,0xef,0xf7,0xef,0xff,0xe0,0xff,0xe0,0xff,
 0xe0,0xff,0xef,0xff,0xef,0xf7,0xe0,0xf1,0x20,0xf0};


#ifdef TARPN_LOGO
const unsigned char tarpn_logo_bitmap [] PROGMEM = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x04, 
  0x3f, 0xff, 0xfe, 0x3f, 0xff, 0x80, 0xff, 0xff, 0xf0, 0x1f, 0xff, 0xff, 0x07, 0xff, 0x03, 0xfc, 
  0x3f, 0xff, 0xfe, 0x3f, 0xff, 0x80, 0xff, 0xff, 0xf8, 0x1f, 0xff, 0xff, 0x87, 0xff, 0x83, 0xfc, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x04, 
  0x3f, 0xff, 0xfe, 0x3f, 0xff, 0x80, 0xff, 0x83, 0xfe, 0x1f, 0xf8, 0x7f, 0xc7, 0xff, 0xc3, 0xfc, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 
  0x38, 0xff, 0x12, 0x1e, 0x7f, 0x00, 0x7f, 0x81, 0xfe, 0x07, 0xf8, 0x1f, 0xc1, 0xff, 0xf0, 0xf0, 
  0x38, 0xff, 0x1e, 0x1e, 0x3f, 0x00, 0x7f, 0x83, 0xfc, 0x07, 0xf8, 0x3f, 0xc1, 0xff, 0xf8, 0xf0, 
  0x00, 0x81, 0x00, 0x20, 0x20, 0x00, 0x00, 0x7c, 0x0c, 0x04, 0x07, 0xc0, 0x41, 0x24, 0x0c, 0x10, 
  0x00, 0xff, 0x00, 0x3c, 0x3f, 0x80, 0x7f, 0xff, 0xf8, 0x07, 0xff, 0xff, 0x81, 0xf3, 0xfc, 0xf0, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0xff, 0x00, 0x7b, 0xff, 0xc0, 0x7f, 0x87, 0xf8, 0x07, 0xf8, 0x00, 0x01, 0xe0, 0xff, 0xf0, 
  0x00, 0x81, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x10, 
  0x00, 0xff, 0x00, 0xf0, 0x0f, 0xe0, 0x7f, 0x83, 0xfc, 0x07, 0xf8, 0x00, 0x01, 0xe0, 0x7f, 0xf0, 
  0x00, 0xff, 0x43, 0xf0, 0x0f, 0xe0, 0x7f, 0x81, 0xfe, 0x1f, 0xfe, 0x00, 0x01, 0xf0, 0x3f, 0xf0, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x03, 0xff, 0xc3, 0xfc, 0x3f, 0xf8, 0xff, 0xe0, 0xff, 0x1f, 0xfe, 0x00, 0x07, 0xf8, 0x0f, 0xf0, 
  0x00, 0x00, 0x42, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xf0, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};
#endif

#endif

void cycle_selection(uint8_t * var, uint8_t len, bool inc) {
  uint8_t val = *var;
  if (inc) {
    if (val == (len - 1)) {
      *(var) = 0;
    } else {
      *(var) = (val + 1);
    }
  } else {
    if (val == 0) {
      *(var) = (len - 1);
    } else {
      *(var) = (val - 1);
    }
  }
}

void serial_print(long now);